{
  "commands": [
    {
      "command": "followage",
      "cooldown": 1,
      "cooldownType": "user",
      "modOnly": false,
      "gattOnly": false,
      "responseType": "eval",
      "response": "console.log(userId); console.log(channelId); apiClient.kraken.users.getFollowedChannel(userId, channelId).then((follow)=>{ var response = `@${user} You are not following!`; if (follow) { const currentTimestamp = Date.now(); const followStartTimestamp = follow.followDate.getTime(); response = `@${user} You have been following for ${this.secondsToDuration((currentTimestamp - followStartTimestamp) / 1000)}!`;} twitchModuleInstance.action(response); }); \"nothing\";"
    },
    {
      "command": "imposter",
      "cooldown": 1,
      "cooldownType": "user",
      "modOnly": false,
      "gattOnly": false,
      "responseType": "eval",
      "response": "var imposter = Math.random() > 0.5; if (user === \"gatt_au\") imposter = false; if (imposter) twitchModuleInstance.timeout(user, 10, \"They were an imposter!\"); \". 。 • ﾟ 。 . 。 • ﾟ . 。ඞ .  • ﾟ 。 @\" + user + \" was\" + (imposter ? \" an imposter!\" : \" not an imposter! gattauWave . 。 • ﾟ 。 . . 。. 。 • ﾟ 。 . . 。. 。 • ﾟ 。 . . 。\");"
    },
    {
      "command": "multi",
      "cooldown": 1,
      "cooldownType": "global",
      "modOnly": false,
      "gattOnly": false,
      "responseType": "simple",
      "response": "Nobody else, just me"
    },
    {
      "command": "ejected",
      "cooldown": 1,
      "cooldownType": "global",
      "modOnly": false,
      "gattOnly": false,
      "responseType": "simple",
      "response": ". 。 • ﾟ 。 . . 。. 。 • ﾟ 。 . . 。ඞ . 。@$USER got ejected... PepeHands  . 。. 。 • ﾟ 。 . .  . 。. 。 • ﾟ 。 . . ",
      "afterEval": "var eject = Math.random() > 0.1; if (eject) twitchModuleInstance.timeout(user, 10, \"They got ejected :(\"); obs.send('SetTextGDIPlusProperties', {'scene-name': `-- Memes`, source: `EJECTED`, text: user + ` got ejected last...`} )"
    },
    {
      "command": "sadge",
      "cooldown": 1,
      "cooldownType": "global",
      "modOnly": false,
      "gattOnly": false,
      "responseType": "simple",
      "response": "ヽヽ｀ヽ｀、ヽヽ｀ヽ｀、ヽヽ｀ヽ、ヽヽ｀ヽ｀、ヽヽ｀ヽ｀、｀ヽ｀、ヽヽ｀ヽ｀、ヽヽ｀ヽ PepeHands ヽ｀ヽ｀、ヽヽ｀、ヽヽ｀ヽ｀、ヽヽ｀ヽ｀、｀ヽ｀、ヽヽ｀ヽ｀、ヽヽ｀ヽ｀、ヽヽ｀ヽ｀、ヽヽ、ヽヽ｀ヽ、ヽヽ"
    },
    {
      "command": "keyboards",
      "cooldown": 1,
      "cooldownType": "global",
      "modOnly": false,
      "gattOnly": false,
      "responseType": "simple",
      "response": "Main Keyboard: Gasket Mount TOFU65 w/ 2014 MX Blacks, 205g0, Sprit Springs & Creams, 205g0. Second Keyboard: XD84 w/ Tangerines 205g0. Coming Soon: BEAR65 w/ Alpacas probably, NK Entry Milkshake Edition"
    },
    {
      "command": "ping",
      "cooldown": -1,
      "cooldownType": "user",
      "modOnly": false,
      "gattOnly": false,
      "responseType": "simple",
      "response": "@$USER Pong!"
    },
    {
      "command": "mod",
      "cooldown": -1,
      "cooldownType": "user",
      "modOnly": true,
      "gattOnly": false,
      "responseType": "simple",
      "response": "@$USER is a cool mod person"
    },
    {
      "command": "rl",
      "cooldown": -1,
      "cooldownType": "user",
      "modOnly": true,
      "gattOnly": false,
      "responseType": "eval",
      "response": "this.loadCommands(); \"Commands reloaded. There are \" + commands.length + \" commands in memory, including this one!\""
    },
    {
      "command": "eval",
      "cooldown": -1,
      "cooldownType": "user",
      "modOnly": true,
      "gattOnly": true,
      "responseType": "eval",
      "response": "var evalD = msg.replace(\"!eval \", \"\"); console.log(\"You eval'd \" + evalD); var response = eval(evalD); response;"
    }
  ]
}
